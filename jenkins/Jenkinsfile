pipeline {
    agent any
 
    environment {
        // Define environment variables for tools
        NEXUS_CREDENTIALS = 'nexus-credentials'  // The ID of the Nexus credentials
        SONAR_TOKEN = 'sonarqube-token'  // The ID of the SonarQube token
        SONARQUBE_SERVER = 'SonarQube Server'  // The name of the SonarQube server configured in Jenkins
        MAVEN_HOME = tool name: 'MAVEN_HOME', type: 'maven'
    }
 
    stages {
        stage('Checkout') {
            steps {
                // Checkout code from the Git repository
                git 'https://github.com/ravurumanoj/simple-java-maven-app.git'
            }
        }
 
        stage('Build') {
            steps {
                // Clean and build the Maven project
                sh "${MAVEN_HOME}/bin/mvn clean install"
            }
        }

        stage('SonarQube Analysis') {
            steps{
            withSonarQubeEnv() {
              sh "${MAVEN_HOME}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=sonartest"
            }
            }
        }
 
        stage('Quality Gate') {
            steps {
                // Wait for the SonarQube analysis to be completed and check the quality gate status
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
 
        // stage('Publish to Nexus') {
        //     steps {
        //         script {
        //             def pom = readMavenPom file: 'pom.xml'
        //             nexusArtifactUploader artifacts: [
        //                 [
        //                     artifactId: pom.artifactId,
        //                     classifier: '',
        //                     file: "target/${pom.artifactId}-${pom.version}.jar",
        //                     type: 'jar'
        //                 ]
        //             ],
        //             credentialsId: NEXUS_CREDENTIALS,
        //             groupId: pom.groupId,
        //             nexusUrl: 'http://52.91.128.112:8081/#admin/repository/repositories:maven-snapshot',
        //             nexusVersion: 'nexus3',
        //             protocol: 'http',
        //             repository: 'your-repository',
        //             version: pom.version
        //         }
        //     }
        // }
    }
 
    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
    }
}


